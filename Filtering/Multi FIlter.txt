***** Filtering / Multi Filter *****

< Multi Filter Model >

filterType : 다중 필터 유형

filterModels : filterParams 에 지정된 필터와 동이랗ㄴ 순서의 하위 필터 모델입니다.


< Multi Filter Parameters >

filters : 필터 정의 개채의 배열입니다.

readOnly : true인 경우 이 필터에서 관리하는 모든 UI 입력은 표시 전용이며 필터는 API 호출의 영향만 받을 수 있습니다. 하위 필터에는 영향을 미치지 않으며 readOnly 해당하는 경우 개별적으로 구성해야 합니다.
           default : false


< IMultiFilterDef >

display : 다중 필터에 필터가 표시되는 방식을 구성합니다.
          default : false

title : 필터가 하위 메뉴 또는 아코디언 내부에 표시될 때 사용되는 제목입니다.

filter : 다중 필터 내부에서 사용할 하위 필터 구성 요소입니다.

filterFramework : 다중 필터 내부에서 사용할 하위 필터 구성 요소입니다.

filterParams : 하위 필터 구성요소에 전달할 사용자 정의 매개변수입니다.

floatingFilterComponent : 자식 필터에 사용할 부동 필터 구성 요소입니다.

floatingFilterComponentFramework : 자식 필터에 사용할 부동 프레임워크 필터 구성 요소입니다.

floatingFilterComponentParams : 플로팅 필터 구성요소에 전달할 맞춤 매개변수입니다.


< Multi Filter API >

isFilterActive : 필터가 현재 활성화되어 있으면 true를 반환하고 그렇지 않으면 false를 반환합니다.

getModel : 필터의 현재 상태를 나타내는 모델을 반환하거나 필터가 활성화되지 않은 경우 null을 반환합니다.

setModel : 제공된 모델을 사용하여 필터의 상태를 설정합니다. null 일때 모델로 제공하면 필터가 비활성화됩니다.
           참고 : 필터 설정에 비동기적으로 값을 제공하는 경우 반환된 그리드 Promise를 대기하여 추가 작업을 수행하기 전에 이러한 변경 사항이 적용될 때까지 기다려야 합니다.
           filter.setModel({ values : ['a','b']}).then(function(){
            gridApi.onFilterChanged(); });

getChildFilterInstance : 지정된 인덱스 또는 undefined 잘못된 인덱스에 대한 자식 필터 인스턴스를 반환합니다.            