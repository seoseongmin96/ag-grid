*****Grid-Api*****

< Accessories >

setPopupPranet : 그리드 팝업(컨텍스트 메뉴, 열 메뉴 등)의 부모 팝업으로 사용할 DOM 요소입니다.

showColumnMenuAfterButtonClick : 제공된 버튼 요소 뒤에 열 메뉴를 표시하고 위치를 지정합니다. 고유한 헤더 템플릿과 함께 사용합니다.

showColumnAfterMouseClick : 열 메뉴를 표시하고 마우스 이벤트를 기준으로 위치를 지정합니다. 고유한 헤더 템플릿과 함께 사용합니다.

hidePopupMenu : 보이는 상황에 맞는 메뉴나 열 메뉴를 숨깁니다.

setSideBar : 사이드 바를 제공된 구성으로 재설정합니다. 매개변수는 sideBar 그리드 속성과 동일합니다. 사이드 바는 새로운 구성으로 처음부터 다시 생성됩니다.

getSideBar : 현재 사이드 바 구성을 반환합니다. 바로 가기가 사용된 경우 자세한 긴 형식을 반환합니다.

setSideBarVisible : 보이는 패널과 탭 버튼을 포함하여 전체 사이드 바를 표시하거나 숨깁니다.

isSideBarVisible : true일때 사이드 바가 보이면 반환합니다.

setSideBarPosition : 그리드를 기준으로 사이드 바 위치를 설정합니다. 가능한 값은 'left' 또는 'right'입니다.
                     default : 'right'

openToolPanel : 특정 도구 패널을 엽니다. 열리는 도구 패널의 ID를 제공하십시오.

closeToolPanel : 현재 열려 있는 도구 패널(있는 경우)을 닫습니다.

getOpenedToolPanel : 현재 표시된 도구 패널의 ID(있는 경우)를 반환하고 그렇지 않은 경우 null.

isToolPanelShowing : true일때 도구 패널이 표시되면 반환하고 그렇지 않으면 false를 반환합니다.

refreshToolPanel : refresh 해당 메서드를 호출하여 모든 도구 패널을 강제로 새로 고칩니다.

getToolPanelInstance : 제공된 id에 해당하는 도구 패널 인스턴스를 가져옵니다.

getStatusPanel : 제공된 id에 해당하는 상태 패널 인스턴스를 가져옵니다.


< Clipboard >

copyselectedRangeToClipboard : 선택한 범위를 클립보드에 복사합니다.

copySelectedRangeDown : Excel의 Ctrl + D 와 유사하게 선택한 범위를 아래로 복사합니다.

copySelectedRowsToClipboard : 선택한 행을 클립보드에 복사합니다.


< Column Definitions >

getColumnDefs : 현재 열 정의를 반환합니다.

setColumnDefs : 새 열 정의를 설정하기 위해 호출합니다. 그리드는 모든 열 머리글을 다시 그린 다음 모든 행을 다시 그립니다.

setAutoGroupColumnDef : 새로운 자동 그룹 열 정의를 설정하기 위해 호출합니다. 그리드는 자동 그룹 열이 있는 경우 다시 생성합니다.

setDefaultColDef : 새 기본 열 정의를 설정하기 위해 호출합니다.

sizeColumnsToFit : 그리드에 수평으로 맞도록 열의 크기를 조정하도록 설정합니다.


< Column Headers > 

setHeaderHeight : 열 레이블 헤더가 포함된 행의 높이를 픽셀 단위로 설정합니다.

setGroupHeaderHeight : 헤더 열 그룹을 포함하는 행의 높이를 픽셀 단위로 설정합니다.

setFloatingFiltersHeight : 부동 필터가 포함된 행의 높이를 픽셀 단위로 설정합니다.

setPivotHeaderHeight : 피벗 모드에 있을 때 열을 포함하는 행의 높이를 픽셀 단위로 설정합니다.

setPivotGroupHeaderHeight : 피벗 모드에 있을 떄 헤더 열 그룹을 포함하는 행의 높이를 픽셀 단위로 설정합니다.


< Editing >

startEditingCell : 제공된 셀 편집을 시작합니다. 다른 셀이 편집 중이면 해당 셀에서 편집이 중지됩니다.

stopEditing : 셀이 편집 중이면 편집을 중지합니다. true일때 편집을 취소하렴ㄴ 통과 하십시오. (즉, 변경 사항을 수락하지 않음)

getEditingCells : 그리드가 편집 중인 경우 편집 셀의 세부 정보를 반환합니다.

getCellEditorInstances : 활성 셀 편집기 인스턴스의 목록을 반환합니다. 선택적으로 특정 열/행 노드로 제한하는 매개변수를 제공합니다.


< Events >

addEventListner : 지정된 eventType에 대한 이벤트 리스너를 추가합니다. addEventListner 브라우저 DOM 요소와 유사하게 작동합니다.

addGlobalListener : 그리드에서 오는 모든 이벤트 유형에 대한 이벤트 레스너를 추가합니다.

removeEventListener : 이벤트 리스너를 제거합니다. 

removeGlobalListener : 전역 이벤트 수신기를 제거합니다.

addRenderedRowListener : 가상 행에 콜백을 등록합니다. 가상 행은 화면에 시각적으로 렌더링되는 행입니다. (스크롤 위치로 인해 표시되지 않는 행은 렌더링되지 않음) 일반 이벤트와 달리 렌더링된 행 수신기를 등록 취소할 필요가 없습니다.
                         렌더링된 행이 그리드에서 제거되면 연결된 모든 렌더링된 행 수신기도 제거됩니다. 현재 하나의 이벤트만 지원합니다. virtualRowRemoved.;
                         cellRenderer  행이 더 이상 존재하지 않을 때 정리를 수행해야 하는 경우 이 이벤트를 수신합니다.


< Export >  

exportDataAsCsv : 그리드 데이터의 CSV 내보내기를 다운로드합니다.

getDataAsCsv : exportDataAsCsv와 유사하지만 결과를 다운로드하는 대신 문자열로 반환합니다.

exportDataAsExcel : 그리드 데이터의 Excel 내보내기를 다운로드합니다.

getDataAsExcel : exportDataAsExcel 과 유사하지만 파일을 다운로드하는 대신 사용자가 처리 할 Blob을 반환합니다.

getSheetDataForExcel : 그리드의 데이터를 시트로 가져오는 데 사용되는 방법입니다. 나중에 getMultipleSheetsAsExcel() 또는 exportMultipleSheetAsExcel() 에서 내보낼 수 있습니다.

exportMultiplesheetsAsExcel : 하나의 파일에 여러 시트의 Excel 내보내기를 다운로드합니다.

getMultipleSheetAsExcel : exportMultipleSheetsAsExcel 과 유사하지만 파일을 다운로드하는 대신 사용자가 처리 할 Blob을 반환합니다.    


< Filtering >

setQuickFilter : 필터링을 위해 빠른 필터 텍스트를 그리드에 전달합니다.

resetQuickFilter : 모든 rowNode에서 빠른 필터 캐시 텍스트를 재설정합니다.

isQuickFilterPresent : 빠른 필터가 설정되어 있으면 true를 반환하고 그렇지 않으면 false를 반환합니다.

isColumnFilterPresent : 열 필터가 설정되어 있으면 true를 반환하고 그렇지 않으면 false를 반환합니다.

isAnyFilterPresent : 필터가 설정되어 있으면 true를 반환합니다. 여기에는 빠른 필터, 고급 필터 또는 외부 필터가 포함됩니다.

getFilterInstance : 열에 대한 필터 구성 요소 인스턴스를 반환합니다. key 문자열 필드 이름 또는 ColDef 객체가 될 수 있습니다. (객체 참조에서 일치, 필드 이름이 고유하지 않은 경우 유용)
                    필터가 비동기식으로 생성된 경우 getFilterInstance가 반환 되므로 대신 필터 인스턴스에 액세스하는 null 데를 사용해야 합니다.

getFilterModel : 모든 고급 필터의 현재 상태를 가져옵니다. 필터 상태를 저장하는 데 사용됩니다.

setFilterModel : 모든 고급 필터의 상태를 설정합니다. getFilterModel() 필터 상태를 복원하기 위해 얻은 정보를 제공하십시오.

onFilterChanged : 필터가 변경되었음을 그리드에 알립니다. 이것은 일반적으로 필터 API 중 하나를 통해 필터가 변경된 후에 호출됩니다.

destroyFilter : 필터를 파괴합니다. 특정 필터가 처음부터 다시 생성되도록 하는 데 유용합니다.


< Integrated Charts >

createRangeChart : 범위에서 프로그래밍 방식으로 차트를 만드는 데 사용됩니다.

createPivotChart : 그리드에서 프로그래밍 방식으로 피벗 차트를 만드는 데 사용됩니다.

createCrossFilterChart : 범위에서 교차 필터 차트를 프로그래밍 방식으로 만드는 데 사용됩니다.

getChratRef : ChartRef에 제동된 chartId를 사용하여 반환합니다.

getChartModels : 그리드에서 현재 렌더링된 차트에 대한 정보가 있는 모델 목록을 반환합니다.

restoreChart : ChartModel에서 이전에 얻은 차트를 사용하여 차트를 복원합니다.

getChartImageDataURL : 차트 이미지의 표현을 포함하는 요청된 데이터 URL을 포함하는 문자열을 반환합니다.


< Keyboard Navigation >

getFocusedCell : 포커스가 있는 셀(또는 그리드가 포커스를 잃을 경우 마지막 포커스 셀)을 반환합니다.

setFocusedCell : 지정된 셀에 포커스를 설정합니다. rowPinned 'top', 'bottom' 또는 null(고정되지 않은 경우)일 수 있습니다.

clearFocusedCell : 초점이 맞춰진 셀을 지웁니다.

tabToNextCell : 탭을 사용하는 것처럼 그리드 포커스를 다음 셀로 이동합니다.

tabToPreviousCell : Shift 키를 누른 상태에서 그리드 포커스를 이전 셀로 이동합니다.


< Master Detail >

getDetailGridInfo : DetailGridInfo 제공된 detailGridId에 해당하는 값을 반환합니다.

forEachDetailGridInfo : 그리드에서 각각을 반복하고 각각 DetailGridInfo에 대해 제공된 콜백을 호출합니다.

addDetailGridInfo : 마스터 그리드 생성 시 디테일 그리드를 등록합니다.

removeDetailGridInfo : 마스터 그리드가 파괴되면 상세 그리드의 등록을 취소합니다.



< Miscellaneous >

getValue : 특정 rowNode(행)의 열 값을 가져옵니다. 이것은 예를 들어 자체 CSV 내보내기를 구현하는 경우 셀의 원시 값을 원하는 경우에 유용합니다.

setDomLayout : 레이아웃 옵션 간 전환: normal, autoHeight, print, normal domLayout이 제공되지 않은 경우 기본값입니다.

destory : 그리드를 파괴하고 리소스를 해제합니다. 프레임워크를 사용하는 경우 그리드가 프레임워크 수명 주기와 연결되므로 이를 호출할 필요가 없습니다.
          그러나 웹 구성 요소 또는 기본 JavaScript를 사용하는 경우 응용 프로그램에서 메모리 누수를 방지하기 위해 이것을 호출해야 합니다.

setGridAriaProperty : 그리드 패널(요소가 있는 role="grid")에서 ARIA 속성을 설정하고 값이 null인 경우 ARIA 속성을 제거합니다.
                      예 : api.setGridAriaProperty('label', 'my grid') 설정 aria-label="my grid" 합니다. 그리드 요소에서 속성을 api.setGridAriaProperty('label', null) 제거합니다. aria-label

isAnimationFrameQueueEmpty : true일때 처리할 애니메이션 프레임이 더 이상 없을 때 반환 됩니다.


< Overlays >

showLoadingOverlay : '로드 중' 오버레이를 표시합니다.

showNoRowsOverlay : '행 없음' 오버레이를 표시합니다.

hideOverlay : 오버레이가 표시되면 숨깁니다.


< Pagination >

paginationIsLastPageFound : true일때 마지막 페이지가 알려진 경우를 반환합니다. 페이지 매김을 위해 클라이언트 측 행 모델을 사용하는 경우 항상 그렇습니다. false일때 마지막 페이지를 알 수 없는 경우를 반환합니다.

paginationGetPageSize : 페이지당 표시되는 행 수를 반환합니다.

paginationSetPageSize : paginationPageSize를 설정한 다음 변경 사항이 즉시 적용되도록 그리드의 페이지를 다시 매깁니다.

paginationGetCurrentPage : 표시되는 페이지의 0부터 시작하는 인덱스를 반환합니다.

paginationGetTotalPages : 총 페이지 수를 반환합니다. paginationIsLastPageFound() === false 이면 null을 반환합니다.

paginationGetRowCount : 총 행 수입니다.

< Pivot and Aggregation >

addAggFunc : 지정된 키를 사용하여 집계 함수를 추가합니다.

addAggFuncs : 지정된 키를 사용하여 집계 기능을 추가합니다.

clearAggFuncs : 모든 집계 기능(그리드에서 제공하는 기능 포함)을 지웁니다.


< Refresh >

refreshCells : 모든 셀에서 변경 감지를 수행하여 필요한 경우 셀을 새로 고칩니다.

redrawRows : DOM에서 행을 제거하고 처음부터 다시 생성하십시오.

refreshHeader : 헤더를 다시 그립니다. 열 이름이 변경되거나 열 머리글이 표시되는 방식이 변경되는 경우에 유용합니다.

flashCells : 플래시 행, 열 또는 개별 셀.


< Rendering >

getRenderedNodes : 렌더링된 노드를 검색합니다. 가상화로 인해 현재 보이는 행과 버퍼에 있는 행만 포함됩니다.

getCellRendererInstances : 활성 셀 렌더러 인스턴스의 목록을 반환합니다.

getSizesForCurrentTheme : 다양한 UI 요소가 현재 테마로 렌더링되는 크기를 가져옵니다. gridOptions를 사용하여 행 또는 헤더 높이를 재정의하면 제공한 재정의 값이 반환됩니다.

resetRowHeights : 행 높이를 다시 계산하도록 그리드에 지시합니다.

onRowHeightChanged : 그리드에 행 높이가 변경되었음을 알려줍니다. rowNode.setRowHeight(newHeight)을 호출한 후 사용합니다.


< Row Displayed >

getDisplayedRowAtIndex : 지정된 위치에 표시된 RowNode값을 반환합니다. index

getDisplayedRowCount : 표시된 행의 총 수를 반환합니다.

getFirstDisplayedRow : 스크롤로 인핸 첫 번째로 표시된 행의 인덱스를 가져옵니다.(버퍼에 표시되지 않는 렌더링된 행 포함)

getLastDsiplayedRow : 스크롤로 인해 마지막으로 표시된 행의 인덱스를 가져옵니다.(버퍼에 표시되지 않는 렌더링된 행 포함)


< Row Drag and Drop >

setSuppressRowDrag : suppressRowDrag 속성을 설정합니다.

setSuppressMoveWhenRowDragging : suppressMoveWhenRowDragging 속성을 설정합니다. 

addRowDropZone : 행을 놓을 수 있는 그리드 외부에 놓기 영역을 추가합니다.

removeRowDropZone : addRowDropZone에 의해 추가된 외부 드롭존을 제거합니다.

getRowDropZoneParams : RowDropZoneParams 다른 그리드의 addRowDropZone 메서드에서 사용하도록 반환합니다.


< Row Grouping >

expandAll : 모든 그룹을 확장합니다.

collapseAll : 모든 그룹을 접습니다.

setRowNodeExpanded : 특정 행 노드를 확장하거나 축소합니다.

onGroupExpandedOrCollapsed : 모델을 가져온 후 그룹을 확장하거나 축소하는 경우 이 메서드를 호출하여 그리드에 알립니다. '표시할'행의 최종 세트를 다시 해결합니다.
                             (즉,시각적으로 그룹을 확장하거나 축소)


< Row Nodes >

getRowNode : 주어진 ID를 가진 행 노드를 반환합니다. 행 노드 ID는 콜백에서 제공한 getRowId(params) ID입니다. 그렇지 않으면 ID는 행 데이터가 설정될 때 그리드에 의해 자동 생성된 숫자(문자열로 변환)입니다.

forEachNode : 그리드의 각 노드(행)를 반복하고 각 노드에 대한 콜백을 호출합니다. forEach 이것은 JavaScript 배열의 메소드와 유사하게 작동합니다. 그리드 내에서 적용된 필터링 또는 정렬을 무시하고 모든 노드에 대해 호출됩니다.

forEachNodeAfterFilter : 필터링된 데이터를 건너뛴다는 점을 제외하고 forEachNode와 유사합니다.

forEachNodeAfterFilterAndSort : 행이 그리드에 표시되는 순서대로 콜백이 호출된다는 점을 제외하고 forEachNodeAfterFilter과 유사합니다.

forEachLeafNode : forEachNode와 유사하지만 모든 리프 노드를 나열합니다. 이것은 그리드가 그룹화를 수행하기 전에 그리드에 제공한 모든 데이터를 효과적으로 통과합니다.
                  트리 데이터를 사용하는 경우 하위가 있는 노드를 포함하여 제공한 데이터에 대한 모든 노드를 통과하지만 계층에서 간격이 누락된 그리드에서 생성된 그룹은 제외합니다.


< Row Pinning >

setPinnedTopRowData : 상단 고정 행을 설정합니다. 행이 없거나 정의되지 않은 상태로 호출하여 상단 고정 행을 지웁니다.

setPinnedBottomRowData : 하단 고정 행을 설정합니다. 행이 없거나 정의되지 않은 상태롤 호출하여 맨 아래 고정된 행을 지웁니다.

getPinnedTopRowCount : 상단에 고정된 행의 수를 가져옵니다.

getPinnedBottomRowCount : 고정된 맨 아래 행의 수를 가져옵니다.

getPinnedTopRow : 지정된 인덱스가 있는 맨 위에 고정된 행을 가져옵니다.

getPinnedBottomRow : 지정된 인덱스가 있는 맨 위에 고정된 행을 가져옵니다.


< RowModel >


< RowModel : Client-Side >


< RowModel : Infinite >


< RowModel : Server-Side >








